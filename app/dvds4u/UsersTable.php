<?php

namespace dvds4u;

// Models our actors users table (clients and admin) in the database
class UsersTable extends TableAbstract
{

    // Populate table name
    protected $tableName = 'users';

    // Table attributes
    protected $email = 'email';
    protected $nickName = 'nick_name';
    protected $pass = 'pass';
    protected $address = 'address';
    protected $city = 'city';
    protected $postcode = 'postcode';
    protected $phone = 'phone_number';
    protected $active = 'active';
    protected $admin = 'admin';
    protected $hash = 'hash';

    // Fetches a user object by email address
    public function fetchByEmail($email)
    {
        $sql = "SELECT * FROM $this->tableName"
            . " WHERE $this->email = :email";
        $result = $this->dbh->prepare($sql);
        $result->execute([':email' => $email]);
        $row = $result->fetch(\PDO::FETCH_ASSOC);
        $entity = null;                                             // also false
        if($row) {
            $entity = new Entity($row);
        }
        return $entity;
    }

    // Adds a new user to the users table specified by required details
    // id, admin and active are auto-generated by the database
    public function addUser($details)
    {
        $sql = "INSERT INTO $this->tableName"
            . "($this->email, $this->nickName, $this->pass, "
            . "$this->address, $this->city, $this->postcode, "
            . "$this->phone, $this->hash)"
            . " VALUES ( :email, :nick_name, :pass, "
            . ":address, :city, :postcode, "
            . ":phone, :hashVal)";
        $result = $this->dbh->prepare($sql);
        $params = [
            ':email' => $details['email'],
            ':nick_name' => $details['nick_name'],
            ':pass' => password_hash($details['password'], PASSWORD_BCRYPT),
            ':address' => $details['address'],
            ':city' => $details['city'],
            ':postcode' => $details['postcode'],
            ':phone' => $details['phone_number'],
            ':hashVal' => md5(rand(0, 1000)),                       // doesn't matter what this is
        ];
        $result->execute($params);
    }

    // Activates a user account specified by e-mail so it can be used
    // For the website
    public function activateAccount($email)
    {
        $sql = "UPDATE $this->tableName SET $this->active = 1"
        . " WHERE $this->email = :email";
        $result = $this->dbh->prepare($sql);
        $result->execute([':email' => $email]);
    }

    // Updates profile nickname
    public function updateProfile($id, $values)
    {                                        // Don't want to try to update PK
        foreach($values as $key => $value) {
            $this->updateField($id, $key, $value);
        }
    }

    public function updatePassword($id, $pass)
    {
        $sql = "UPDATE $this->tableName SET $this->pass = :pass"
            . " WHERE $this->primaryKey = :primaryKey";
        $result = $this->dbh->prepare($sql);
        $result->execute([':pass' => password_hash($pass, PASSWORD_BCRYPT), ':primaryKey' => $id]);
    }

}